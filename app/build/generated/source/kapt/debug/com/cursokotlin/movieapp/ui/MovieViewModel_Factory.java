// Generated by Dagger (https://dagger.dev).
package com.cursokotlin.movieapp.ui;

import com.cursokotlin.movieapp.ddl.data.MovieRepository;
import com.cursokotlin.movieapp.utils.ResourceProvider;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class MovieViewModel_Factory implements Factory<MovieViewModel> {
  private final Provider<MovieRepository> repositoryProvider;

  private final Provider<ResourceProvider> resourceProvider;

  public MovieViewModel_Factory(Provider<MovieRepository> repositoryProvider,
      Provider<ResourceProvider> resourceProvider) {
    this.repositoryProvider = repositoryProvider;
    this.resourceProvider = resourceProvider;
  }

  @Override
  public MovieViewModel get() {
    return newInstance(repositoryProvider.get(), resourceProvider.get());
  }

  public static MovieViewModel_Factory create(Provider<MovieRepository> repositoryProvider,
      Provider<ResourceProvider> resourceProvider) {
    return new MovieViewModel_Factory(repositoryProvider, resourceProvider);
  }

  public static MovieViewModel newInstance(MovieRepository repository,
      ResourceProvider resourceProvider) {
    return new MovieViewModel(repository, resourceProvider);
  }
}
